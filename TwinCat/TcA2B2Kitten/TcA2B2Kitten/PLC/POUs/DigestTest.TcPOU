<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="DigestTest" Id="{d5c05ab6-d9dc-4903-b1b4-a1d364a61d48}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK DigestTest
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	un : STRING;
	pw : STRING;
	realm : STRING;
	meth : STRING;
	uri : STRING;
	qop : STRING;
	nonce : STRING;
	cnonce : STRING;
	nc : STRING;
	
	tempString : STRING(1000);
	
	retVal: BOOL;
	
	h1_byArr: ARRAY[0..15] OF BYTE;
	h1_hexStr: STRING;
	h2_byArr: ARRAY[0..15] OF BYTE;
	h2_hexStr: STRING;
	response_byArr: ARRAY[0..15] OF BYTE;
	response_hexStr: STRING;
	
	calculateNow : BOOL;
	i: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

IF calculateNow THEN
	
	// Values collected via wireshark
	un := 'Default User';
	pw := 'robotics';
	realm := 'validusers@robapi.abb';
	meth := 'GET';
	uri := '/rw/rapid/execution';
	qop := 'auth';
	nonce := 'MGY0Yjc2MGY2Y2QyZjAwNzp2YWxpZHVzZXJzQHJvYmFwaS5hYmI6MTkwMjg5NjRlNGE6MA==';
	cnonce := 'diddLOPR';
	nc := '00000001';
	
	
	tempString := '';
	tempString := CONCAT(tempString, un);
	tempString := CONCAT(tempString, ':');
	tempString := CONCAT(tempString, realm);
	tempString := CONCAT(tempString, ':');
	tempString := CONCAT(tempString, pw);
	
	retVal := F_GenerateHashValue(E_HashMode.HASH_MD5, ADR(tempString), LEN(tempString), ADR(h1_byArr), SIZEOF(h1_byArr));
	
	//h1_hexStr := DATA_TO_HEXSTR(ADR(h1_byArr), SIZEOF(h1_byArr), TRUE); // this method adds unnecessary space characters between bytes
	h1_hexStr := '';
	FOR i := 0 TO 15 DO
		h1_hexStr := CONCAT(h1_hexStr, BYTE_TO_HEXSTR(h1_byArr[i], 2, TRUE));
	END_FOR
	// expected value: 952890790eb23290847e6f4d57e76d86
	
	
	tempString := '';
	tempString := CONCAT(tempString, meth);
	tempString := CONCAT(tempString, ':');
	tempString := CONCAT(tempString, uri);
	
	retVal := F_GenerateHashValue(E_HashMode.HASH_MD5, ADR(tempString), LEN(tempString), ADR(h2_byArr), SIZEOF(h2_byArr));
	
	h2_hexStr := '';
	FOR i := 0 TO 15 DO
		h2_hexStr := CONCAT(h2_hexStr, BYTE_TO_HEXSTR(h2_byArr[i], 2, TRUE));
	END_FOR
	// expected value: 30bb6c0952d8c10cb9b2240a3772c67b
	
	
	tempString := '';
	tempString := CONCAT(tempString, h1_hexStr);
	tempString := CONCAT(tempString, ':');
	tempString := CONCAT(tempString, nonce);
	tempString := CONCAT(tempString, ':');
	tempString := CONCAT(tempString, nc);
	tempString := CONCAT(tempString, ':');
	tempString := CONCAT(tempString, cnonce);
	tempString := CONCAT(tempString, ':');
	tempString := CONCAT(tempString, qop);
	tempString := CONCAT(tempString, ':');
	tempString := CONCAT(tempString, h2_hexStr);
	
	retVal := F_GenerateHashValue(E_HashMode.HASH_MD5, ADR(tempString), LEN(tempString), ADR(response_byArr), SIZEOF(response_byArr));
	
	response_hexStr := '';
	FOR i := 0 TO 15 DO
		response_hexStr := CONCAT(response_hexStr, BYTE_TO_HEXSTR(response_byArr[i], 2, TRUE));
	END_FOR
	// expected value: c36e30cdd2961584cd41f6f49f6bcbba
	
	
	
	calculateNow := FALSE;
END_IF






]]></ST>
    </Implementation>
    <LineIds Name="DigestTest">
      <LineId Id="10" Count="2" />
      <LineId Id="178" Count="1" />
      <LineId Id="36" Count="10" />
      <LineId Id="58" Count="0" />
      <LineId Id="64" Count="1" />
      <LineId Id="62" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="110" Count="1" />
      <LineId Id="177" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="126" Count="1" />
      <LineId Id="130" Count="3" />
      <LineId Id="135" Count="2" />
      <LineId Id="121" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="154" Count="3" />
      <LineId Id="167" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="159" Count="3" />
      <LineId Id="164" Count="2" />
      <LineId Id="152" Count="1" />
      <LineId Id="122" Count="2" />
      <LineId Id="33" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="13" Count="5" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>