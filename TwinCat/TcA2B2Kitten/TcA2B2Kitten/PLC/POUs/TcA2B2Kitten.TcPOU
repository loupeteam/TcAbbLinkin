<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="TcA2B2Kitten" Id="{ea1fde4a-6390-43d8-ae6c-e82c42f674c2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TcA2B2Kitten
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_httpClient:			FB_IotHttpClient;
	_httpRequest:			FB_IotHttpRequest;
	_httpRequestHeader:		FB_IotHttpHeaderFieldMap;
	bTLS:					BOOL;
	bSendGet:				BOOL;
	configureNow:			BOOL;
	requestNow: 			BOOL;
	sContent				: STRING(2000);
	getContentNow: BOOL;
	
	_jsonDomParser : FB_JsonDomParser;
	jsonRoot : SJsonValue;
	jsonProp : SJsonValue;
	parseContentNow: BOOL;
	sState: STRING;
	
	
	_jsonSaxParser : 				FB_JsonSaxReader;
	jsonSaxHandler_RobotState :		JsonSaxHandler_RobotState;
	
	saxParseContentNow: 			BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF (NOT _httpClient.bConfigured) OR configureNow THEN 
	//_httpClient.sHostName := '192.168.56.1';
	_httpClient.sHostName := '127.0.0.1';
	_httpClient.nHostPort := 80;
	_httpClient.bKeepAlive := TRUE;
	_httpClient.stTLS.bNoServerCertCheck:=TRUE;
	_httpClient.tConnectionTimeout := T#10S;
	
	IF bTLS THEN
		//_httpClient.stTLS.aPskKey := 0;
		_httpClient.stTLS.bNoServerCertCheck := FALSE;
		//_httpClient.stTLS.nPskKeyLen := 0;
		//_httpClient.stTLS.sCA := '';
		//_httpClient.stTLS.sCert := '';
		_httpClient.stTLS.sCiphers := 'TLS_AES_128_GCM_SHA256';
		//_httpClient.stTLS.sCrl := '';
		//_httpClient.stTLS.sKeyFile := '';
		//_httpClient.stTLS.sKeyPwd := '';
		//_httpClient.stTLS.sPskIdentity := '';
		_httpClient.stTLS.sVersion := 'tlsv1.3';
	END_IF
	configureNow := FALSE;
END_IF

// Method for background communication with the TwinCAT driver. The method must be called cyclically for every client FUB instance.
_httpClient.Execute();

//IF _httpClient.bConnected AND requestNow THEN
IF requestNow AND _httpClient.bConfigured THEN
	//_httpRequest.eCompressionMode := ;
	//_httpRequest.sContentType := ;
	
	_httpRequestHeader.AddField('accept', 'application/xhtml+xml;v=2.0', FALSE);
	_httpRequestHeader.AddField('authorization', 'Basic RGVmYXVsdCBVc2VyOnJvYm90aWNz', FALSE);	// encoded Username: Default User, Password: robotics
	
	_httpRequest.SendRequest(sUri:='/users/rmmp', fbClient:=_httpClient, eRequestType:=ETcIotHttpRequestType.HTTP_Get, pContent:=0, nContentSize:=0, fbHeader:=_httpRequestHeader);
	
	requestNow := FALSE;
END_IF


IF getContentNow THEN
	_httpRequest.GetContent(ADR(sContent), nContentSize:=SIZEOF(sContent), TRUE);
	getContentNow := FALSE;
END_IF


IF parseContentNow THEN
	jsonRoot := _jsonDomParser.ParseDocument(sContent);
	jsonProp := _jsonDomParser.FindMemberPath(jsonRoot, 'state#0/ctrlexecstate');	// See https://infosys.beckhoff.com/english.php?content=../content/1033/tcplclib_tc3_jsonxml/3664369803.html&id=4049129407046606983
	IF (jsonProp <> 0) THEN
  		sState := _jsonDomParser.GetString(jsonProp);
	END_IF
	
	parseContentNow := FALSE; 
END_IF


IF saxParseContentNow THEN
	jsonSaxHandler_RobotState.Reset();
	_jsonSaxParser.Parse(sContent, ipHdl := jsonSaxHandler_RobotState, );
	sState := jsonSaxHandler_RobotState.parsedState;
	
	saxParseContentNow := FALSE; 
END_IF






]]></ST>
    </Implementation>
    <LineIds Name="TcA2B2Kitten">
      <LineId Id="23" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="152" Count="1" />
      <LineId Id="147" Count="2" />
      <LineId Id="299" Count="0" />
      <LineId Id="303" Count="2" />
      <LineId Id="308" Count="0" />
      <LineId Id="310" Count="1" />
      <LineId Id="316" Count="2" />
      <LineId Id="315" Count="0" />
      <LineId Id="320" Count="2" />
      <LineId Id="306" Count="0" />
      <LineId Id="327" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="295" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="170" Count="1" />
      <LineId Id="108" Count="1" />
      <LineId Id="103" Count="0" />
      <LineId Id="125" Count="1" />
      <LineId Id="105" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="173" Count="1" />
      <LineId Id="172" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="224" Count="0" />
      <LineId Id="230" Count="0" />
      <LineId Id="262" Count="2" />
      <LineId Id="231" Count="1" />
      <LineId Id="38" Count="5" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>